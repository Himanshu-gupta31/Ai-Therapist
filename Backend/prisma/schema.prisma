// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String? // Optional: add name field
  token         String?
  refresh_token String?
  access_token  String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  authType      String?
  screenTime    Int?           @default(0)
  habits        Habit[]
  streak        Int            @default(0)
  longestStreak Int            @default(0)
  lastCheckIn   DateTime?
  checkInDates  String[]       @default([])
  dailyPlanner  DailyPlanner[]
}

model Habit {
  id          String @id @default(uuid())
  habitName   String
  userId      String
  description String
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DailyPlanner {
  id          String   @id @default(uuid()) 
  userId      String
  date        DateTime
  planName    String
  time        String
  description String?
  priority    String
  category    String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId,date,time])
}
